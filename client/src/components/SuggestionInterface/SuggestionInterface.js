// components/SuggestionInterface.js
"use client"; 
import { useState } from 'react';

const getSuggestions = async () => {
  // Mocked suggestions for the demo. In real use, this would come from an NLP model.
  return [
    {
      id: 1,
      text: 'Change "the quick brown fox" to "the fast brown fox".',
    },
    {
      id: 2,
      text: 'Replace "jumps over" with "leaps across".',
    },
    // Add more suggestions as needed
  ];
};

const SuggestionInterface = () => {
  const [suggestions, setSuggestions] = useState([]);

  // Fetch suggestions (simulating an async fetch)
  const fetchSuggestions = async () => {
    const fetchedSuggestions = await getSuggestions();
    setSuggestions(fetchedSuggestions);
  };

  // Handle accept and reject actions
  const handleAccept = (id) => {
    console.log(`Accepted suggestion with id: ${id}`);
    // Handle accept logic here
  };

  const handleReject = (id) => {
    console.log(`Rejected suggestion with id: ${id}`);
    // Handle reject logic here
  };

  return (
    <>
      {/* Hero Section (optional, similar to Blog Hero) */}
       {/* <div className="hero overlay"> */}
        <div className="container">
          <div className="row align-items-center justify-content-start">
            <div className="col-lg-5">
              <h1 className="heading" data-aos="fade-up">Suggestions</h1>
              <p className="mb-5" data-aos="fade-up">Review and apply suggestions generated by the NLP model for document improvements.</p>
            </div>
           </div>
        </div>
      {/* </div> */}

      {/* Suggestions Section */}
      <div className="section">
        <div className="container">
          <div className="row mb-5">
            {suggestions.map((suggestion) => (
              <div className="col-lg-6" key={suggestion.id}>
                <div className="suggestion-entry">
                  <h2>Suggestion {suggestion.id}</h2>
                  <p>{suggestion.text}</p>
                  <div className="btn-group">
                    <button onClick={() => handleAccept(suggestion.id)} className="btn btn-sm btn-outline-success">Accept</button>
                    <button onClick={() => handleReject(suggestion.id)} className="btn btn-sm btn-outline-danger">Reject</button>
                  </div>
                </div>
              </div>
            ))}
          </div>
          {/* Load suggestions button */}
          <div className="row">
            <div className="col-lg-12">
              <button onClick={fetchSuggestions} className="upload-button mt-44">Load Suggestions</button>
            </div>
          </div>
        </div>
      </div>
    </>
  );
};

export default SuggestionInterface;
